# Mac/Linux: download and install miniconda via shell
# Windows: use chocolatey to install miniconda

matrix:
  include:
    - os : linux
      language: python
      python: "3.7"
# Travis secrets break Windows builds. When this issue is resolved, Windows builds should work.
# See https://travis-ci.community/t/choco-install-hangs-forever/307
# https://travis-ci.community/t/current-known-issues-please-read-this-before-posting-a-new-topic/264
#    - os : windows
#      language : shell
#      python: "3.6"
    - os : osx
      python: "3.7"
      language: generic

before_install:
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh -O miniconda.sh;
    elif  [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      wget https://repo.continuum.io/miniconda/Miniconda3-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi

install:
  - if [[ "$TRAVIS_OS_NAME" != "windows" ]]; then
      bash miniconda.sh -b -p $HOME/miniconda;
      export PATH="$HOME/miniconda:$HOME/miniconda/bin:$PATH";
    elif  [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      choco install miniconda3 --params="'/AddToPath:1'";
      export PATH="/c/tools/miniconda3/scripts:/c/tools/miniconda3/:$PATH";
    fi
  - hash -r;
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - echo $TRAVIS_OS_NAME
  - echo $TRAVIS_PYTHON_VERSION
  # install pillow to work around a Windows issue: https://github.com/python-pillow/Pillow/issues/2945
  - conda config --add channels conda-forge
  - conda config --add channels pycalphad
  - conda install 'pillow==6.2.1'
  - conda install 'constructor>=2.2.0' 'pyyaml'
  - constructor -V

script:
  - "python configure.py"
  - if [[ "$TRAVIS_OS_NAME" == "windows" ]]; then
      export BLD_PLTFRM="win-64";
    elif [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export BLD_PLTFRM="osx-64";
    elif [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      export BLD_PLTFRM="linux-64";
    fi
  - mkdir build
  - echo "Starting build for $BLD_PLTFRM"
  - constructor -v --output-dir=build --platform=$BLD_PLTFRM constructor
  - ls build

after_sucess:
  - echo "Build artifacts to be uploaded... `git ls-files -o --exclude-standard`"

notifications:
  email: False

addons:
  artifacts:
    s3_region: "us-east-1" # defaults to "us-east-1"
    paths:
      - $(git ls-files -o --exclude-standard | tr "\n" ":")
    target_paths:
      - /
    working_dir: build
    permissions: public-read
